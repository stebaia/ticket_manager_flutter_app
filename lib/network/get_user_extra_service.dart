import 'package:http/http.dart' as http;
import 'package:ticket_manager_flutter_app/model/course_model/course.dart';
import 'package:ticket_manager_flutter_app/model/course_model/course_object.dart';
import 'package:ticket_manager_flutter_app/model/expositor_code20_model/expositor_code20_model.dart';
import 'package:ticket_manager_flutter_app/model/expositor_detail_model/expositor_detail_model.dart';
import 'package:ticket_manager_flutter_app/network/vivaticket_api.dart';
import 'package:ticket_manager_flutter_app/utils/envirorment.dart';
import 'package:xml/xml.dart';
import 'package:xml2json/xml2json.dart';
import 'dart:convert';

import '../model/expositor_mapper/expositor_mapper.dart';

class GetUserExtraService {
  final myTransformer = Xml2Json();

  Future<ExpoisitorMapper> requestUserExtra(
      int idUtilizzatore, int idUtente, Envirorment envirorment) async {
    var envelope = '''
      <soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">
        <soap12:Body>
          <GetUtenteExtra xmlns="http://tempuri.org/">            
            <idextra>$idUtente</idextra>
          </GetUtenteExtra>
        </soap12:Body>
      </soap12:Envelope>
    ''';

    http.Response response = await http.post(
        Uri.parse(VivaticketApi.REQUEST_GET_UTENTE_EXTRA(envirorment)),
        headers: {
          "Content-Type": "text/xml; charset=utf-8",
          //"SOAPAction": "http://tempuri.org/GetAllCity",
          //"Host": "www.i2isoftwares.com"
          "Accept": "text/xml"
        },
        body: envelope);

    var rawXmlResponse = response.body;

// Use the xml package's 'parse' method to parse the response.
    XmlDocument customParseXml = XmlDocument.parse(rawXmlResponse);
    myTransformer.parse(rawXmlResponse);
    var jsonResponse = myTransformer.toParker();
    Map<String, dynamic> responseJson = json.decode(jsonResponse);
    AutogeneratedExpositorDetailResponse expositorCode20Response =
        AutogeneratedExpositorDetailResponse.fromJson(responseJson);
    //LoginResult result = LoginResult.fromJson(responseJsonjj["soap:Envelope"]["soap:Body"]["LoginUtenteResponse"]["LoginUtenteResult"]);
    print("DATAResult=" + response.body);

    AutogeneratedExpositorDetailResponse expositor =
        AutogeneratedExpositorDetailResponse.fromJson(responseJson);

    //LoginResult result = LoginResult.fromJson(responseJsonjj["soap:Envelope"]["soap:Body"]["LoginUtenteResponse"]["LoginUtenteResult"]);
    print("DATAResult=" + response.body);

    return expositor.soapEnvelope!.soapBody!.getUtenteExtraResponse!
        .getUtenteExtraResult!.miatabella!;
  }
}
