import 'package:http/http.dart' as http;
import 'package:ticket_manager_flutter_app/model/history_model/history.dart';
import 'package:ticket_manager_flutter_app/model/history_model/history_object.dart';
import 'package:ticket_manager_flutter_app/network/vivaticket_api.dart';
import 'package:ticket_manager_flutter_app/utils/envirorment.dart';
import 'package:xml/xml.dart';
import 'package:xml2json/xml2json.dart';
import 'dart:convert';

class HistoryService {
  final myTransformer = Xml2Json();

  Future<List<History>> requestHistory(int idManifestazione, int idCorso,
      String barcode, Envirorment envirorment) async {
    var envelope = '''
        <soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">
          <soap12:Body>
            <History xmlns="http://tempuri.org/">
              <idmanifestazione>$idManifestazione</idmanifestazione>
              <codice20>$barcode</codice20>
              <idcorso>$idCorso</idcorso>
            </History>
          </soap12:Body>
        </soap12:Envelope>
    ''';

    http.Response response = await http.post(
        Uri.parse(VivaticketApi.REQUEST_HISTORY_SCAN(envirorment)),
        headers: {
          "Content-Type": "text/xml; charset=utf-8",
          //"SOAPAction": "http://tempuri.org/GetAllCity",
          //"Host": "www.i2isoftwares.com"
          "Accept": "text/xml"
        },
        body: envelope);

    var rawXmlResponse = response.body;

// Use the xml package's 'parse' method to parse the response.
    XmlDocument customParseXml = XmlDocument.parse(rawXmlResponse);
    myTransformer.parse(rawXmlResponse);
    var jsonResponse = myTransformer.toParker();
    Map<String, dynamic> responseJson = json.decode(jsonResponse);
    AutogeneratedHistoryScanModel autogeneratedHistoryScanModel =
        AutogeneratedHistoryScanModel.fromJson(responseJson);
    //LoginResult result = LoginResult.fromJson(responseJsonjj["soap:Envelope"]["soap:Body"]["LoginUtenteResponse"]["LoginUtenteResult"]);
    print("DATAResult=" + response.body);
    HistoryResult historyResult = autogeneratedHistoryScanModel
        .soapEnvelope!.soapBody!.historyResponse!.historyResult!;
    List<History> historyList = [];
    int index = 0;
    historyResult.valori3Stringhe!.forEach((element) {
      historyList.add(History(
          data: element.data!,
          description: element.description!,
          gate: element.gate!,
          check: element.check!));
    });
    return historyList;
  }
}
